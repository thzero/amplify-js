# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
machine:
    environment:
      PATH: "${PATH}:${HOME}/${CIRCLE_PROJECT_REPONAME}/node_modules/.bin"

defaults: &defaults
  docker:
    - image: cypress/base:10
      environment:
          ## this enables colors in the output
          TERM: xterm

jobs:
  build:
    <<: *defaults
    working_directory: ~/amplify-js
    resource_class: large
    steps:
      - checkout
      - run: yarn config set workspaces-experimental true
      - run: yarn
      - run: yarn run bootstrap
      - run: yarn run build
      - run: yarn run coverage

      - save_cache:
          key: amplify-ssh-deps-{{ .Branch }}
          paths:
            - ~/.ssh
      - persist_to_workspace:
          root: /root
          paths: amplify-js
  unit_test:
    <<: *defaults
    working_directory: ~/amplify-js
    steps:
      - attach_workspace:
          at: /root
      - run:
          name: "Run Amplify JS unit tests"
          command: |
            yarn run test --scope @aws-amplify/auth
            yarn run test --scope @aws-amplify/api
            yarn run test --scope @aws-amplify/analytics
            yarn run test --scope @aws-amplify/cache
            yarn run test --scope @aws-amplify/core
            yarn run test --scope @aws-amplify/interactions
            yarn run test --scope @aws-amplify/pubsub
            yarn run test --scope @aws-amplify/predictions
            yarn run test --scope @aws-amplify/storage
            yarn run test --scope @aws-amplify/xr
            yarn run test --scope aws-amplify-react
            yarn run test --scope aws-amplify-angular
            yarn run test --scope aws-amplify-vue
  integ_setup:
    <<: *defaults
    working_directory: ~/
    steps:
      - run: 
          name: "Clone Amplify JS Samples repo, install cypress, install react samples authenticator and link amplify packages"
          command: |
            mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
            echo $SSH_HOST_PUBLIC_KEY >> ~/.ssh/known_hosts
            git clone $AMPLIFY_JS_SAMPLES_STAGING_URL
            cd amplify-js-samples-staging
            yarn
      - save_cache:
          key: amplify-js-{{ .Branch }}-{{ checksum "amplify-js-samples-staging/yarn.lock" }}
          paths:
            - ~/.cache ## cache both yarn and Cypress
      - persist_to_workspace:
          root: /root
          paths: amplify-js-samples-staging
  integ_react_predictions:
    <<: *defaults
    working_directory: ~/
    steps:
      - attach_workspace:
          at: /root
      - restore_cache:
          key: amplify-js-{{ .Branch }}-{{ checksum "amplify-js-samples-staging/yarn.lock" }}
      - run:
          name: "Link aws-amplify"
          command: |
            cd amplify-js/packages/aws-amplify
            yarn link
      - run:
          name: "Link predictions"
          command: |
            cd amplify-js/packages/predictions
            yarn link
      - run:
          name: "Install Predictions React sample"
          command: |
            cd amplify-js-samples-staging/samples/react/predictions/multi-user-translation
            yarn
            yarn link aws-amplify
            yarn link @aws-amplify/predictions
      - run:
          name: "Start Predictions React Sample server in background"
          command: |
            cd amplify-js-samples-staging/samples/react/predictions/multi-user-translation
            yarn start
          background: true
      - run:
          name: "Run cypress tests for Predictions React Sample"
          command: |
            cd amplify-js-samples-staging
            yarn cypress:react --spec "cypress/integration/predictions/multiuser-translation.spec.js"
      - store_artifacts:
          path: amplify-js-samples-staging/cypress/videos
      - store_artifacts:
          path: amplify-js-samples-staging/cypress/screenshots
  integ_react_auth:
    <<: *defaults
    working_directory: ~/
    steps:
      - attach_workspace:
          at: /root
      - restore_cache:
          key: amplify-js-{{ .Branch }}-{{ checksum "amplify-js-samples-staging/yarn.lock" }}
      - run:
          name: "Install React Authenticator sample"
          command: |
            cd amplify-js-samples-staging/samples/react/auth/with-authenticator
            yarn
      - run:
          name: "Link aws-amplify"
          command: |
            cd amplify-js/packages/aws-amplify
            yarn link
      - run:
          name: "Link aws-amplify-react"
          command: |
            cd amplify-js/packages/aws-amplify-react
            yarn link
      - run:
          name: "Install React Authenticator sample"
          command: |
            cd amplify-js-samples-staging/samples/react/auth/with-authenticator
            yarn
            yarn link aws-amplify
            yarn link aws-amplify-react
      - run:
          name: "Start React Authenticator Sample server in background"
          command: |
            cd amplify-js-samples-staging/samples/react/auth/with-authenticator
            yarn start
          background: true
      - run:
          name: "Run cypress tests for React Authenticator Sample"
          command: |
            cd amplify-js-samples-staging
            yarn cypress:react --spec "cypress/integration/auth/authenticator.spec.js"
      - store_artifacts:
          path: amplify-js-samples-staging/cypress/videos
      - store_artifacts:
          path: amplify-js-samples-staging/cypress/screenshots
  integ_angular_auth:
    <<: *defaults
    working_directory: ~/
    steps:
      - attach_workspace:
          at: /root
      - restore_cache:
          key: amplify-js-{{ .Branch }}-{{ checksum "amplify-js-samples-staging/yarn.lock" }}
      - run:
          name: "Install Angular Authenticator sample"
          command: |
            cd amplify-js-samples-staging/samples/angular/auth/amplify-authenticator
            yarn
      - run:
          name: "Link aws-amplify"
          command: |
            cd amplify-js/packages/aws-amplify
            yarn link
      - run:
          name: "Link aws-amplify-angular"
          command: |
            cd amplify-js/packages/aws-amplify-angular
            yarn link
      - run:
          name: "Install Angular Authenticator sample"
          command: |
            cd amplify-js-samples-staging/samples/angular/auth/amplify-authenticator
            yarn
            yarn link aws-amplify
            yarn link aws-amplify-angular
      - run:
          name: "Start Angular Authenticator Sample server in background"
          command: |
            cd amplify-js-samples-staging/samples/angular/auth/amplify-authenticator
            yarn start
          background: true
      - run:
          name: "Run cypress tests for Angular Authenticator Sample"
          command: |
            cd amplify-js-samples-staging
            yarn cypress:angular --spec "cypress/integration/auth/authenticator.spec.js"
      - store_artifacts:
          path: amplify-js-samples-staging/cypress/videos
      - store_artifacts:
          path: amplify-js-samples-staging/cypress/screenshots
  integ_vue_auth:
    <<: *defaults
    working_directory: ~/
    steps:
      - attach_workspace:
          at: /root
      - restore_cache:
          key: amplify-js-{{ .Branch }}-{{ checksum "amplify-js-samples-staging/yarn.lock" }}
      - run:
          name: "Install Vue Authenticator sample"
          command: |
            cd amplify-js-samples-staging/samples/vue/auth/amplify-authenticator
            yarn
      - run:
          name: "Link aws-amplify"
          command: |
            cd amplify-js/packages/aws-amplify
            yarn link
      - run:
          name: "Link aws-amplify-vue"
          command: |
            cd amplify-js/packages/aws-amplify-vue
            yarn link
      - run:
          name: "Start Vue Authenticator Sample server in background"
          command: |
            cd amplify-js-samples-staging/samples/vue/auth/amplify-authenticator
            yarn start
          background: true
      - run:
          name: "Run cypress tests for Vue Authenticator Sample"
          command: |
            cd amplify-js-samples-staging
            yarn cypress:vue --spec "cypress/integration/auth/authenticator.spec.js"
      - store_artifacts:
          path: amplify-js-samples-staging/cypress/videos
      - store_artifacts:
          path: amplify-js-samples-staging/cypress/screenshots
  deploy:
    <<: *defaults
    working_directory: ~/amplify-js
    steps:
      - attach_workspace:
          at: /root
      - restore_cache:
          keys: 
            - amplify-ssh-deps-{{ .Branch }}
            - amplify-ssh-deps
      - run:
          name: "Publish to Amplify Package"
          command: |
            if [ -z "$CIRCLE_PULL_REQUEST" ]; then
              echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
              npm whoami
              git config --global user.email $GITHUB_EMAIL
              git config --global user.name $GITHUB_USER
              git status
              git --no-pager diff
              yarn run publish:$CIRCLE_BRANCH
            else
              echo "Skipping deploy."
            fi

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - unit_test:
          requires:
            - build
      - integ_setup:
          filters:
            branches:
              only:
                - release
                - master
          requires:
            - build
      - integ_react_predictions:
          filters:
            branches:
              only:
                - release
                - master
          requires:
            - integ_setup
      - integ_react_auth:
          filters:
            branches:
              only:
                - release
                - master
          requires:
            - integ_setup
      - integ_angular_auth:
          filters:
            branches:
              only:
                - release
                - master
          requires:
            - integ_setup
      - integ_vue_auth:
          filters:
            branches:
              only:
                - release
                - master
          requires:
            - integ_setup
      - deploy:
          filters:
            branches:
              only:
                - release
                - master
                - beta
          requires:
            - unit_test
            - integ_react_predictions
            - integ_react_auth
            - integ_angular_auth
            - integ_vue_auth
